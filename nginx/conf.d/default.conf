# HTTP redirects for all domains
server {
    listen 80;
    server_name orosdata.com www.orosdata.com server.orosdata.com gtm.orosdata.com n8n.orosdata.com;
    
    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# GTM server configuration for orosdata.com only
server {
    listen 443 ssl;
    server_name gtm.orosdata.com;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/orosdata.com.crt;
    ssl_certificate_key /etc/nginx/ssl/orosdata.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # GTM server proxy settings
    location / {
        proxy_pass http://gtm-server:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Increase timeouts for GTM server
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        
        # Cache settings with preview mode considerations
        proxy_cache nginx_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        add_header X-Cache-Status $upstream_cache_status;
        
        # Bypass cache for preview mode parameters
        proxy_cache_bypass $arg_gtm_auth $arg_gtm_preview $arg_gtm_debug;
        proxy_no_cache $arg_gtm_auth $arg_gtm_preview $arg_gtm_debug;
    }
}

# Main landing page for orosdata.com
server {
    listen 443 ssl;
    server_name orosdata.com www.orosdata.com;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/orosdata.com.crt;
    ssl_certificate_key /etc/nginx/ssl/orosdata.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS (uncomment if you have valid SSL)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Serve a simple landing page
    location / {
        return 200 '<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OrosData - Server-Side Tagging Solutions</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 0; padding: 40px; background-color: #f5f5f5; }
        .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #333; text-align: center; }
        p { color: #666; line-height: 1.6; }
        .links { margin-top: 30px; padding-top: 20px; border-top: 1px solid #eee; }
        .links a { display: inline-block; margin: 10px 20px 10px 0; padding: 10px 20px; background: #007cba; color: white; text-decoration: none; border-radius: 4px; }
        .links a:hover { background: #005a87; }
    </style>
</head>
<body>
    <div class="container">
        <h1>Welcome to OrosData</h1>
        <p>Your trusted partner for enterprise server-side tagging solutions. We provide scalable, secure, and compliant data collection infrastructure for businesses of all sizes.</p>
        <p>Our platform enables first-party data collection while maintaining the highest standards of privacy and performance.</p>
        <div class="links">
            <a href="https://server.orosdata.com/grafana/">Server Monitoring</a>
            <a href="mailto:contact@orosdata.com">Contact Us</a>
        </div>
    </div>
</body>
</html>';
        add_header Content-Type text/html;
    }
}

# Server management tools configuration
server {
    listen 443 ssl;
    server_name server.orosdata.com;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/orosdata.com.crt;
    ssl_certificate_key /etc/nginx/ssl/orosdata.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS (uncomment if you have valid SSL)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Proxy buffer settings
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    
    # Default redirect to Grafana
    location = / {
        return 302 /grafana/;
    }
    
    # Expose metrics for Prometheus
    location /metrics {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.16.0.0/12; # Docker network
        deny all;
    }
    
    # Grafana proxy - fixed configuration to avoid redirect loops
    location /grafana {
        # Important: No trailing slash in proxy_pass to prevent redirect loops
        proxy_pass http://grafana:3000;
        
        # Required headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Don't buffer - improves performance
        proxy_buffering off;
    }
    
    # Add specific location for the trailing slash to prevent redirect loops
    location = /grafana/ {
        proxy_pass http://grafana:3000/;
        
        # Required headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Don't buffer - improves performance
        proxy_buffering off;
    }
    
    # Prometheus proxy (optional, secured with basic auth)
    location /prometheus/ {
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/auth/.htpasswd;
        proxy_pass http://prometheus:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# N8N Automation Server
server {
    listen 443 ssl;
    http2 on;
    server_name n8n.orosdata.com;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/orosdata.com.crt;
    ssl_certificate_key /etc/nginx/ssl/orosdata.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Increase client max body size for file uploads
    client_max_body_size 50M;
    
    # N8N proxy settings with WebSocket support
    location / {
        proxy_pass http://n8n:5678;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # CRITICAL: WebSocket support for N8N
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_cache_bypass $http_upgrade;
        proxy_ssl_server_name on;
        
        # Optimizations for N8N
        chunked_transfer_encoding off;
        proxy_buffering off;
        proxy_cache off;
        proxy_request_buffering off;
        
        # Increase timeouts for long-running workflows
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        
        # Rate limiting for general access
        limit_req zone=tag_manager burst=20 nodelay;
    }
    
    # Health check endpoint
    location /healthz {
        proxy_pass http://n8n:5678/healthz;
        access_log off;
    }
    
    # Specific webhook endpoint optimization
    location ~ ^/(webhook|webhook-test) {
        proxy_pass http://n8n:5678;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket support for webhooks
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # Optimized for webhook performance
        chunked_transfer_encoding off;
        proxy_buffering off;
        proxy_cache off;
        proxy_request_buffering off;
        
        # Webhook timeouts
        proxy_connect_timeout 10;
        proxy_send_timeout 30;
        proxy_read_timeout 30;
        
        # Rate limiting for webhooks
        limit_req zone=tag_manager burst=100 nodelay;
    }
}

# Include all client-specific configurations
include /etc/nginx/conf.d/clients/*.conf; 