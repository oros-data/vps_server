# Cloudflare real IP configuration
set_real_ip_from 173.245.48.0/20;
set_real_ip_from 103.21.244.0/22;
set_real_ip_from 103.22.200.0/22;
set_real_ip_from 103.31.4.0/22;
set_real_ip_from 141.101.64.0/18;
set_real_ip_from 108.162.192.0/18;
set_real_ip_from 190.93.240.0/20;
set_real_ip_from 188.114.96.0/20;
set_real_ip_from 197.234.240.0/22;
set_real_ip_from 198.41.128.0/17;
set_real_ip_from 162.158.0.0/15;
set_real_ip_from 104.16.0.0/13;
set_real_ip_from 104.24.0.0/14;
set_real_ip_from 172.64.0.0/13;
set_real_ip_from 131.0.72.0/22;
set_real_ip_from 2400:cb00::/32;
set_real_ip_from 2606:4700::/32;
set_real_ip_from 2803:f800::/32;
set_real_ip_from 2405:b500::/32;
set_real_ip_from 2405:8100::/32;
set_real_ip_from 2a06:98c0::/29;
set_real_ip_from 2c0f:f248::/32;
real_ip_header CF-Connecting-IP;

server {
    listen 80;
    server_name datalakeops.com www.datalakeops.com gtm.datalakeops.com;
    
    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# GTM server configuration for datalakeops.com
server {
    listen 443 ssl;
    server_name gtm.datalakeops.com;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/datalakeops.com.crt;
    ssl_certificate_key /etc/nginx/ssl/datalakeops.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # GTM server proxy settings
    location / {
        proxy_pass http://gtm-server:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Increase timeouts for GTM server
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
        
        # Cache settings
        proxy_cache nginx_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        add_header X-Cache-Status $upstream_cache_status;
    }
}

# Main server configuration for monitoring tools
server {
    listen 443 ssl;
    server_name datalakeops.com www.datalakeops.com;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/datalakeops.com.crt;
    ssl_certificate_key /etc/nginx/ssl/datalakeops.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    
    # SSL session cache
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS (uncomment if you have valid SSL)
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Proxy buffer settings
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    
    # Default landing page - redirect directly to grafana with trailing slash
    location = / {
        return 302 /grafana/;
    }
    
    # Expose metrics for Prometheus
    location /metrics {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 172.16.0.0/12; # Docker network
        deny all;
    }
    
    # Grafana proxy - fixed configuration to avoid redirect loops
    location /grafana {
        # Important: No trailing slash in proxy_pass to prevent redirect loops
        proxy_pass http://grafana:3000;
        
        # Required headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Don't buffer - improves performance
        proxy_buffering off;
    }
    
    # Add specific location for the trailing slash to prevent redirect loops
    location = /grafana/ {
        proxy_pass http://grafana:3000/;
        
        # Required headers
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Don't buffer - improves performance
        proxy_buffering off;
    }
    
    # Prometheus proxy (optional, secured with basic auth)
    location /prometheus/ {
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/auth/.htpasswd;
        proxy_pass http://prometheus:9090/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Include all client-specific configurations
include /etc/nginx/conf.d/clients/*.conf; 